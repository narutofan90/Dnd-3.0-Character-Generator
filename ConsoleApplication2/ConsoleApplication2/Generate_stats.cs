using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace CharacterGenDnD
{
    class Generate_stat
    {
        public CryptoRandom rng = new CryptoRandom();
        public int[] player_stats;
        bool agree = false;
        public void Main()
        {
            // Create 2 arrays of integers to hold player dice rolls
            player_stats = new int[6];

            // Create a random number generator
            while (!agree)
            {
                for (int i = 0; i < player_stats.Length; i++)
                {
                    player_stats[i] = rngStat(rng);
                    Console.WriteLine("roll " + (i + 1) + ": " + player_stats[i]);
                }
                Console.WriteLine("would you like to re-roll [yes] or [no]");
                if (Console.ReadLine() == "yes")
                {

                }
                else
                {
                    agree = true;
                }
            }
            Console.ReadKey();
        }
        public int rngStat(CryptoRandom rng)
        {
            int[] dice = new int[4];
            // Roll dice 4 times for each player
            for (int i = 0; i < 4; i++)
            {
                // Increment the array value at the position generated by the dice roll
                // for example a dice roll of 3 increments the array at posion 3
                dice[i] = rng.Next(1, 7);
                //player1[dice]++;
                //Write Player 1  dice roll 
                //Console.WriteLine("Player 1 rolled: {0}", diceRoll + 1);
            }
            int current_min = dice[0];
            int dice_sum = 0;
            for (int i = 0; i < 4; i++)
            {
                dice_sum = dice[i] + dice_sum;
                if (dice[i] < current_min)
                {
                    current_min = dice[i];
                }
            }
            return (dice_sum - current_min);
        }
    }
}
